- hosts: controller
  tasks: 
  - name: Install Nova DB
    mysql_db: name=nova state=present

  - name: Create Nova user in MySQL
    mysql_user: name=nova password=nova host="{{item}}" priv=nova.*:ALL,GRANT state=present
    with_items:
      - "%"
      - 127.0.0.1
      - ::1
      - localhost
    
  - name: Create nova user in Keystone
    keystone_user: token=insecuretoken123 tenant=service user=nova password=nova
  - name: Assign admin role to user
    keystone_user: token=insecuretoken123 role=admin user=nova tenant=service

  - name: Install Nova packages on controller
    apt: pkg={{item}} state=installed
    with_items:
      - nova-api 
      - nova-cert 
      - nova-conductor 
      - nova-consoleauth 
      - nova-novncproxy 
      - nova-scheduler 
      - python-novaclient
    
  - name: Check for Nova Lite DB
    stat: path=/var/lib/nova/nova.sqlite
    register: nova_db
    
  - name: Delete Nova Lite DB (if necessary)
    command: rm -f /var/lib/nova/nova.sqlite
    when: nova_db.stat.exists

  - name: Copy nova configuration to controller
    template: src=templates/nova/controller.nova.conf.j2 dest=/etc/nova/nova.conf
    
## Configure Nova endpoints

  - name: Configure Nova endpoint
    keystone_service:
      token=insecuretoken123
      name=nova
      type=compute
      description="Nova Compute Service"
      publicurl=http://controller01:8774/v2/%\(tenant_id\)s
      internalurl=http://controller01:8774/v2/%\(tenant_id\)s
      adminurl=http://controller01:8774/v2/%\(tenant_id\)s

  - name: Populate Nova DB (if necessary)
    nova_manage: action=db_sync

# Create directory (bug?)

  - name: Create keys directory to solve bug
    file: path=/usr/lib/python2.7/dist-packages/keys owner=root group=root state=directory

  - name: Restart Nova Services
    action: service name={{item}} state=restarted enabled=true
    with_items:
      - nova-api
      - nova-cert
      - nova-consoleauth
      - nova-scheduler
      - nova-conductor
      - nova-novncproxy
